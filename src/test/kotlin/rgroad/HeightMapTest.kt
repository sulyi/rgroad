package rgroad

import org.junit.jupiter.api.Assertions.*
import org.junit.jupiter.api.Test
import java.io.File
import javax.imageio.ImageIO


internal class HeightMapTest {

    private val heightMap = HeightMap(
        0, 0, HeightMapConfig(16u, 1.0f, 0.5f), 4
    )
    private val expectedData = intArrayOf(
        0xb3, 0xa8, 0x9e, 0x8d, 0x8d, 0x76, 0x69, 0x4d, 0x3e, 0x2c, 0x13, 0xb, 0x3, 0x1, 0x5, 0x6,
        0xad, 0xac, 0xa0, 0x95, 0x82, 0x7a, 0x66, 0x58, 0x3d, 0x2e, 0x1f, 0x1e, 0x16, 0x6, 0xc, 0x8,
        0xa7, 0xad, 0xa5, 0x9c, 0x86, 0x7e, 0x6b, 0x5a, 0x4d, 0x42, 0x2e, 0x2a, 0x1e, 0x1b, 0x9, 0xb,
        0xa3, 0xa6, 0x9d, 0x92, 0x8a, 0x7d, 0x71, 0x58, 0x51, 0x47, 0x45, 0x34, 0x2e, 0x24, 0x1d, 0xd,
        0xad, 0x9b, 0x98, 0x96, 0x85, 0x7e, 0x73, 0x66, 0x4c, 0x4c, 0x53, 0x48, 0x42, 0x39, 0x2c, 0x19,
        0xab, 0x9d, 0x98, 0x96, 0x8d, 0x81, 0x7a, 0x64, 0x4f, 0x54, 0x52, 0x56, 0x44, 0x42, 0x38, 0x23,
        0xa6, 0xa7, 0x9c, 0x99, 0x96, 0x8d, 0x75, 0x63, 0x54, 0x52, 0x5e, 0x58, 0x4e, 0x4c, 0x43, 0x3d,
        0xaf, 0xa9, 0xa6, 0xa3, 0xa1, 0x8b, 0x72, 0x6a, 0x60, 0x58, 0x65, 0x60, 0x5f, 0x56, 0x4f, 0x46,
        0xb6, 0xae, 0xb3, 0xab, 0xa9, 0x8b, 0x78, 0x77, 0x65, 0x5f, 0x63, 0x71, 0x79, 0x69, 0x55, 0x57,
        0xc6, 0xc3, 0xb0, 0xae, 0xab, 0x9a, 0x82, 0x7d, 0x72, 0x6d, 0x68, 0x70, 0x73, 0x6b, 0x66, 0x62,
        0xd2, 0xca, 0xb6, 0xb3, 0xa3, 0xa1, 0x90, 0x81, 0x78, 0x77, 0x76, 0x7e, 0x7c, 0x71, 0x68, 0x68,
        0xd6, 0xca, 0xba, 0xb4, 0xac, 0x9a, 0x9d, 0x94, 0x89, 0x7f, 0x7f, 0x84, 0x83, 0x7c, 0x74, 0x69,
        0xd4, 0xcf, 0xbb, 0xb1, 0xa8, 0xa1, 0xa8, 0x9b, 0x95, 0x8e, 0x81, 0x88, 0x80, 0x7a, 0x74, 0x68,
        0xd2, 0xcb, 0xc2, 0xb7, 0xbb, 0xb3, 0xab, 0xa3, 0x90, 0x8c, 0x89, 0x87, 0x7b, 0x7c, 0x76, 0x77,
        0xc9, 0xcd, 0xcc, 0xc8, 0xc3, 0xb6, 0xa6, 0xa0, 0x99, 0x8e, 0x84, 0x82, 0x81, 0x81, 0x81, 0x73,
        0xd1, 0xd4, 0xcc, 0xce, 0xc4, 0xbd, 0xac, 0x9d, 0x93, 0x88, 0x8a, 0x89, 0x80, 0x86, 0x87, 0x78
    ).map {b -> b.toByte()}.toByteArray()

    @Test
    fun testGenerate() {
        val image = heightMap.generate()
        val data = ByteArray(heightMap.size * heightMap.size)
        image.raster.getDataElements(0, 0, heightMap.size, heightMap.size, data)

        ImageIO.write(image, "png", File("heightMap.png"))

        assertEquals(expectedData, data)
    }
}